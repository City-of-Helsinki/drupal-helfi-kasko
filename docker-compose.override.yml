#
# These are service overrides for local development
#

x-environment:
  &default-environment
  # Route that should be used locally
  LAGOON_ROUTE: &default-url "https://${DRUPAL_HOSTNAME}"
  # Uncomment if you like to have the system behave like in production
  #LAGOON_ENVIRONMENT_TYPE: production
  XDEBUG_ENABLE: "${XDEBUG_ENABLE:-false}"
  OMEN_TOKEN: "kissanpissa"
  SSMTP_MAILHUB: "host.docker.internal:1025"

x-volumes:
  &default-volumes
  # Define all volumes you would like to have real-time mounted into the docker containers
  volumes:
    - &app-volume .:/app:delegated
    - &files-volume files:/app/public/sites/default/files

services:

  cli:
    container_name: ${COMPOSE_PROJECT_NAME}-cli
    << : *default-volumes # loads the defined volumes from the top
    volumes:
      - *app-volume
      - *files-volume
      - ssh:/tmp/amazeeio_ssh-agent
    user: root
    environment:
      << : *default-environment # loads the defined environment variables from the top
      SIMPLETEST_BASE_URL: "http://nginx:8080"
      SIMPLETEST_DB: "mysql://drupal:drupal@mariadb:3306/drupal"

  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-nginx.entrypoints=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-nginx.rule=Host(`${DRUPAL_HOSTNAME}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-nginx.tls=true"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-nginx.loadbalancer.server.port=8080"
      - "traefik.docker.network=stonehenge-network"
    << : *default-volumes
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top
      NGINX_FASTCGI_PASS: ${COMPOSE_PROJECT_NAME}-php
    networks:
      - default
      - stonehenge-network

  php:
    container_name: ${COMPOSE_PROJECT_NAME}-php
    << : *default-volumes
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top
      DRUPAL_ROUTES: https://varnish-${DRUPAL_HOSTNAME}

  mariadb:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    ports:
      - "3306" # exposes the port 3306 with a random local port, find it with `docker compose port mariadb 3306`
    volumes:
      - db:/var/lib/mysql

networks:
  stonehenge-network:
    external: true

volumes:
  db:
    {}
  files:
    {}
  ssh:
    name: stonehenge-ssh
    external: true
