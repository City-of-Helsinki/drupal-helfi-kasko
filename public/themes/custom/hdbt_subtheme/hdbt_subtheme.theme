<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

use Drupal\Core\Cache\Cache;
use Drupal\helfi_tpr\Entity\Unit;
use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $variables['content']['#attributes']['block_id'] = $variables['elements']['#id'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter for blocks.
 */
function hdbt_subtheme_theme_suggestions_block_alter(&$suggestions) {
  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('hdbt_subtheme_', '', $suggestion);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide block based menu suggestions.
 */
function hdbt_subtheme_theme_suggestions_menu_alter(&$suggestions, $variables) {
  if (isset($variables['attributes']['block_id'])) {
    $block_id = str_replace('hdbt_subtheme_', '', $variables['attributes']['block_id']);

    switch ($block_id) {
      case 'mobile_navigation':
        $suggestions[] = 'menu__mobile';
        break;

      case 'mainnavigation':
        $suggestions[] = 'menu__main__desktop';
        break;

      case 'main_navigation_level_2':
        $suggestions[] = 'menu__main__sidebar';
        break;

      case 'brandingnavigation':
        $suggestions[] = 'menu__main__branding';
        break;

      default:
        $suggestions[] = 'menu__' . $variables['attributes']['block_id'];
        break;
    }
  }
}

function hdbt_subtheme_preprocess_paragraph(array &$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];
  $paragraph_type = $paragraph->getType();

  // High school & vocational school search paragraphs.
  $search_types = [
    'high_school_search' => 'hs',
    'vocational_school_search' => 'vs',
  ];

  foreach ($search_types as $search_type => $search_type_prefix) {
    $units_field = "field_{$search_type_prefix}_search_units";
    if (
      $paragraph_type == $search_type &&
      $paragraph->hasField($units_field)
    ) {
      // Get all unit ids what content producer has selected for the unit search
      // view and set them as variables for the template.
      $variables['search_parent_paragraph'] = $paragraph->id();
      $variables[$search_type . '_list'] = implode(',', array_map(function ($unit) {
        return $unit['target_id'];
      }, $paragraph->$units_field->getValue()));
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function hdbt_subtheme_form_views_exposed_form_alter(&$form, $form_state) {

  // Handle only High school search view form at this point.
  if (!str_starts_with($form['#id'], 'views-exposed-form-high-school-search-block')) {
    return;
  }

  // Get view from form state.
  $view = $form_state->getStorage()['view'];
  [, $paragraph_id] = $view->args + [NULL, NULL];

  if (!$paragraph = Paragraph::load($paragraph_id)) {
    return;
  }

  if ($paragraph->hasField('field_hs_search_meta_button')) {
    $form['actions']['submit']['#value'] = $paragraph
      ->get('field_hs_search_meta_button')
      ->value;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_tpr_unit(&$variables) {
  if (!isset($variables['entity']) || !$variables['entity'] instanceof Unit) {
    return;
  }
  $entity = $variables['entity'];

  if (
    $entity->hasField('field_hs_front_page') &&
    !$entity->field_hs_front_page->isEmpty() &&
    $entity->field_hs_front_page->entity instanceof Node
  ) {
    $nid = $entity->field_hs_front_page->entity->id();
    $title = $entity->field_hs_front_page->entity->getTitle();
    $variables['high_school_front_page_nid'] = $nid;
    $variables['high_school_front_page_title'] = $title;
  }
}
