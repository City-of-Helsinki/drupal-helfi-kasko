<?php

/**
 * @file
 * Helfi Group module handles customizations for the group module.
 */

declare(strict_types = 1);

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultAllowed;
use Drupal\Core\Access\AccessResultNeutral;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\helfi_group\UnitFormAlter;

/**
 * Implements hook_preprocess_HOOK().
 *
 * Adds parent menu link's title and URL to the group menu.
 */
function helfi_group_preprocess_block(&$variables) {
  if ($variables['base_plugin_id'] !== 'group_content_menu') {
    return;
  }

  if (empty($variables['content']['#items'])) {
    return;
  }

  $current_level_menu_item = reset($variables['content']['#items']);
  if (!isset($current_level_menu_item['original_link'])) {
    return;
  }

  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');

  if ($parent = $current_level_menu_item['original_link']?->getParent()) {
    if ($parent_item = $menu_link_manager->createInstance($parent)) {
      $variables['menu_link_parent'] = [
        'title' => $parent_item->getTitle(),
        'url' => $parent_item->getUrlObject(),
      ];

      // Check if current page is the same as the item used as parent and
      // assign a boolean to enable aria-current="page" attribute on dom.
      $current_item_url = $parent_item->getUrlObject();
      $current_item_path = '/' . $current_item_url->getInternalPath();

      $current_path = \Drupal::service('path.current')->getPath();

      if ($current_item_path == $current_path) {
        $variables['menu_link_parent_is_current'] = TRUE;
      }
    }
  }
}

/**
 * Implements hook_theme().
 *
 * Overrides templates.
 */
function helfi_group_theme($existing, $type, $theme, $path) {
  return [
    'block__group_content_menu' => [
      'template' => 'block--group-content-menu',
      'base hook' => 'block',
    ],
    'menu__group_menu' => [
      'template' => 'menu--group-menu',
      'base hook' => 'menu__group_menu',
    ],
  ];
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function helfi_group_form_tpr_unit_form_alter(&$form, FormStateInterface $form_state) {
  \Drupal::classResolver(UnitFormAlter::class)
    ->alter($form, $form_state);
}

/**
 * Allow users with edit access to nodes to publish/unpublish them.
 *
 * Implements hook_entity_field_access().
 */
function helfi_group_entity_field_access(
  $operation,
  FieldDefinitionInterface $field_definition,
  AccountInterface $account,
  FieldItemListInterface $items = NULL
) {
  if ($field_definition->getname() == 'status' && !empty($items)) {
    /** @var \Drupal\node\Entity\Node $entity */
    $entity = $items->getEntity();

    if ($entity->getEntityTypeId() == 'node') {
      if ($account->hasPermission("edit any {$entity->bundle()} content")) {
        return new AccessResultAllowed();
      }

      if (
        $entity->getOwnerId() == $account->id() &&
        $account->hasPermission("edit own {$entity->bundle()} content")) {
        return new AccessResultAllowed();
      }
    }
  }
  return new AccessResultNeutral();
}

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Removes duplicate local task from group nodes view page.
 */
function helfi_group_menu_local_tasks_alter(&$data, $route_name): void {
  $local_task = 'helfi_group.view_group';
  if (!isset($data['tabs'][0][$local_task])) {
    return;
  }

  $routes = ['view.group_nodes.page_1'];
  if (in_array($route_name, $routes)) {
    unset($data['tabs'][0][$local_task]);
  }
}

/**
 * Implements hook_entity_create_access().
 *
 * For unknown reason the route for adding media as a value to a field
 * is null when using media library on news item main image with school editor
 * role. This hook will allow access to school editors to add the media
 * references when creating new news item content.
 *
 * @see Drupal\media_library\MediaLibraryFieldWidgetOpener()
 */
function helfi_group_node_create_access(AccountInterface $account, array $context, $entity_bundle) {
  if (!empty(\Drupal::routeMatch()->getRouteName())) {
    return AccessResult::neutral();
  }

  return (
    $entity_bundle === 'news_item' &&
    in_array('school_editor', $account->getRoles())
  )
    ? AccessResult::allowed()
    : AccessResult::neutral();
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * #UHF-8926 Prevent group's MenuContentLink's translation form from crashing
 * while saving. Crash was caused by missing menu_parent.
 */
function helfi_group_form_menu_link_content_form_alter(&$form, FormStateInterface $form_state) {
  $entity = $form_state->getFormObject()->getEntity();
  $menu_name = $entity->get('menu_name')->value;
  if (
    !$menu_name ||
    !str_contains($menu_name, 'group')
  ) {
    return;
  }

  $form['menu_parent']['#type'] = 'hidden';
  $menu_parent = sprintf('%s:%s', $menu_name, $entity->get('parent')->value);
  $form['menu_parent']['#value'] = $menu_parent;
}
